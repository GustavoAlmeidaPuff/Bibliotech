@import '../../styles/PageStyles.module.css';

.container {
  padding: 1.5rem;
  width: 100%;
  max-width: 100%;
  overflow-x: hidden;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
  flex-wrap: wrap;
  gap: 1rem;
}

.headerActions {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
}

.filterButton, .createButton, .selectAllButton, .deleteButton, .applyFiltersButton, .clearFiltersButton, .cancelButton {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  border-radius: 8px;
  font-weight: 500;
  transition: all 0.2s ease;
  border: 1px solid var(--border-color);
  cursor: pointer;
  white-space: nowrap;
  text-decoration: none;
}

.filterButton {
  background-color: white;
  color: var(--text-primary);
}

.filterButton:hover {
  background-color: var(--bg-primary);
}

.createButton {
  background-color: var(--primary-color);
  color: white;
}

.createButton:hover {
  background-color: var(--primary-hover);
}

.selectAllButton {
  background-color: var(--secondary-color);
  color: white;
}

.selectAllButton:hover {
  background-color: var(--secondary-hover);
}

.deleteButton {
  background-color: var(--danger-color);
  color: white;
}

.deleteButton:hover {
  background-color: var(--danger-hover);
}

.deleteButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.buttonIcon {
  width: 1rem;
  height: 1rem;
}

.filters {
  background-color: white;
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 1.5rem;
  margin-bottom: 1.5rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.filterGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 1rem;
  margin-bottom: 1rem;
}

.filterGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.filterGroup label {
  font-weight: 500;
  color: var(--text-primary);
  font-size: 0.9rem;
}

.filterGroup input, .filterGroup select, .selectField {
  padding: 0.5rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  font-size: 0.9rem;
  transition: border-color 0.2s ease;
}

.filterGroup input:focus, .filterGroup select:focus, .selectField:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.1);
}

.filterActions {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
}

.applyFiltersButton {
  background-color: var(--primary-color);
  color: white;
}

.applyFiltersButton:hover {
  background-color: var(--primary-hover);
}

.clearFiltersButton {
  background-color: var(--bg-secondary);
  color: var(--text-primary);
}

.clearFiltersButton:hover {
  background-color: var(--bg-primary);
}

/* Formulário de criação */
.createForm {
  background-color: white;
  border: 1px solid var(--border-color);
  border-radius: 8px;
  padding: 1.5rem;
  margin-bottom: 1.5rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.createForm h3 {
  margin: 0 0 1rem 0;
  color: var(--text-primary);
  font-size: 1.2rem;
  font-weight: 600;
}

.formGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 1rem;
  margin-bottom: 1rem;
}

.formGroup {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.formGroup label {
  font-weight: 500;
  color: var(--text-primary);
  font-size: 0.9rem;
}

.formGroup input, .formGroup select {
  padding: 0.5rem;
  border: 1px solid var(--border-color);
  border-radius: 4px;
  font-size: 0.9rem;
  transition: border-color 0.2s ease;
}

.formGroup input:focus, .formGroup select:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.1);
}

.formActions {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
}

.cancelButton {
  background-color: var(--bg-secondary);
  color: var(--text-primary);
}

.cancelButton:hover {
  background-color: var(--bg-primary);
}

.content {
  background-color: white;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  overflow: hidden;
}

.loading {
  padding: 3rem;
  text-align: center;
  color: var(--text-secondary);
}

.emptyState {
  padding: 3rem;
  text-align: center;
  color: var(--text-secondary);
}

.emptyIcon {
  margin-bottom: 1rem;
}

.emptyStateIcon {
  width: 4rem;
  height: 4rem;
  color: var(--text-tertiary);
  margin: 0 auto;
}

.emptyState h3 {
  color: var(--text-primary);
  margin-bottom: 0.5rem;
  font-size: 1.2rem;
}

.emptyState p {
  margin-bottom: 1.5rem;
  max-width: 400px;
  margin-left: auto;
  margin-right: auto;
}

.tableContainer {
  width: 100%;
  overflow-x: auto;
}

.table {
  width: 100%;
  border-collapse: collapse;
  background-color: white;
}

.table th {
  background-color: var(--bg-primary);
  padding: 1rem;
  text-align: left;
  font-weight: 600;
  color: var(--text-primary);
  border-bottom: 1px solid var(--border-color);
  white-space: nowrap;
}

.table td {
  padding: 1rem;
  border-bottom: 1px solid var(--border-light);
}

.checkboxColumn {
  width: 50px;
}

.checkbox {
  display: flex;
  align-items: center;
  justify-content: center;
}

.checkbox input[type="checkbox"] {
  width: 1rem;
  height: 1rem;
  cursor: pointer;
}

.classRow {
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.classRow:hover {
  background-color: var(--bg-primary);
}

.classRow.selected {
  background-color: var(--primary-light);
}

.className {
  font-weight: 500;
  color: var(--text-primary);
}

.shift {
  color: var(--text-secondary);
}

.studentsCount {
  text-align: center;
}

.booksWithdrawnCount {
  text-align: center;
}

.badge {
  display: inline-block;
  padding: 0.25rem 0.75rem;
  background-color: var(--primary-color);
  color: white;
  border-radius: 12px;
  font-size: 0.8rem;
  font-weight: 500;
}

.booksBadge {
  display: inline-block;
  padding: 0.25rem 0.75rem;
  background-color: #059669;
  color: white;
  border-radius: 12px;
  font-size: 0.8rem;
  font-weight: 500;
}


.noResults {
  padding: 2rem;
  text-align: center;
  color: var(--text-secondary);
}

.loadingMore {
  padding: 1rem;
  text-align: center;
  color: var(--text-secondary);
  font-size: 0.9rem;
}

/* Responsividade */
@media (max-width: 768px) {
  .container {
    padding: 1rem;
  }

  .header {
    flex-direction: column;
    align-items: stretch;
    gap: 1rem;
  }

  .headerActions {
    justify-content: flex-end;
  }

  .filterGrid, .formGrid {
    grid-template-columns: 1fr;
  }

  .filterActions, .formActions {
    flex-direction: column;
  }

  .filterButton, .createButton, .selectAllButton, .deleteButton,
  .applyFiltersButton, .clearFiltersButton, .cancelButton {
    justify-content: center;
  }

  .table {
    font-size: 0.9rem;
  }

  .table th, .table td {
    padding: 0.75rem 0.5rem;
  }

  .emptyState {
    padding: 2rem 1rem;
  }

  .emptyStateIcon {
    width: 3rem;
    height: 3rem;
  }
}

@media (max-width: 480px) {
  .headerActions {
    flex-direction: column;
  }

  .table th, .table td {
    padding: 0.5rem 0.25rem;
    font-size: 0.8rem;
  }

  .badge {
    font-size: 0.7rem;
    padding: 0.2rem 0.5rem;
  }

}
